package org.opencode4workspace.bo;

import java.io.Serializable;

/**
 * @author Paul Withers
 * @since 0.8.0
 * 
 *        Focus class, for parsing the response to a request to "/v1/focus" endpoint to analyse text against standard
 *        lenses
 *
 */
public class Focus implements Serializable {

	/**
	 * @author Paul Withers
	 * @since 0.8.0
	 * 
	 *        Enum for Lenses in Focus response
	 *
	 */
	public enum Lens {
		ACTION_REQUEST("ActionRequest"), QUESTION("Question"), COMMITMENT("Commitment");
		private String lens;

		private Lens(String lens) {
			this.lens = lens;
		}

		public String getValue() {
			return lens;
		}
	}

	private static final long serialVersionUID = 1L;
	private Lens lens;
	private int start;
	private int end;
	private String phrase;
	private double confidence;
	private String lensId;
	private String applicationId;
	private int focusVersion;
	private boolean hidden;

	/**
	 * @return Lens this focus was generated by
	 * 
	 * @since 0.8.0
	 */
	public Lens getLens() {
		return lens;
	}

	/**
	 * @param lens Lens this focus was generated by
	 * 
	 * @since 0.8.0
	 */
	public void setLens(Lens lens) {
		this.lens = lens;
	}

	/**
	 * @return int start index within the text passed for the phrase identified
	 * 
	 * @since 0.8.0
	 */
	public int getStart() {
		return start;
	}

	/**
	 * @param start int start index within the text passed for the phrase identified
	 * 
	 * @since 0.8.0
	 */
	public void setStart(int start) {
		this.start = start;
	}

	/**
	 * @return int end index within the text passed for the phrase identified
	 * 
	 * @since 0.8.0
	 */
	public int getEnd() {
		return end;
	}

	/**
	 * @param end int end index within the text passed for the phrase identified
	 * 
	 * @since 0.8.0
	 */
	public void setEnd(int end) {
		this.end = end;
	}

	/**
	 * @return String phrase extracted from the text passed by the lens
	 * 
	 * @since 0.8.0
	 */
	public String getPhrase() {
		return phrase;
	}

	/**
	 * @param phrase String phrase extracted from the text passed by the lens
	 * 
	 * @since 0.8.0
	 */
	public void setPhrase(String phrase) {
		this.phrase = phrase;
	}

	/**
	 * @return double confidence percentage Watson Workspace had in identifying the lens, between 0 and 1
	 * 
	 * @since 0.8.0
	 */
	public double getConfidence() {
		return confidence;
	}

	/**
	 * @param confidence double confidence percentage Watson Workspace had in identifying the lens, between 0 and 1
	 * 
	 * @since 0.8.0
	 */
	public void setConfidence(double confidence) {
		this.confidence = confidence;
	}

	/**
	 * @return String id of the application with which the lens is associated
	 * 
	 * @since 0.8.0
	 */
	public String getApplicationId() {
		return applicationId;
	}

	/**
	 * @param applicationId String id of the application with which the lens is associated
	 * 
	 * @since 0.8.0
	 */
	public void setApplicationId(String applicationId) {
		this.applicationId = applicationId;
	}

	/**
	 * @return String auto-generated id of the Watson Conversation instance
	 * 
	 * @since 0.8.0
	 */
	public String getLensId() {
		return lensId;
	}

	/**
	 * @param lensId String auto-generated id of the Watson Conversation instance
	 * 
	 * @since 0.8.0
	 */
	public void setLensId(String lensId) {
		this.lensId = lensId;
	}

	/**
	 * @return int version of the Focus object
	 * 
	 * @since 0.8.0
	 */
	public int getFocusVersion() {
		return focusVersion;
	}

	/**
	 * @param focusVersion int version of the Focus object
	 * 
	 * @since 0.8.0
	 */
	public void setFocusVersion(int focusVersion) {
		this.focusVersion = focusVersion;
	}

	/**
	 * @return boolean whether or not the lens is hidden, seems to be false always in API response
	 * 
	 * @since 0.8.0
	 */
	public boolean isHidden() {
		return hidden;
	}

	/**
	 * @param hidden boolean whether or not the lens is hidden, seems to be false always in API response
	 * 
	 * @since 0.8.0
	 */
	public void setHidden(boolean hidden) {
		this.hidden = hidden;
	}

}
